name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    outputs:
      minver-version: ${{ steps.minver.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install MinVer CLI
        run: dotnet tool install --global minver-cli --version 6.0.0

      - name: Get version with MinVer
        id: minver
        run: |
          echo "version=$(minver --minimum-major-minor 0.1 --tag-prefix v -d alpha)" >> $GITHUB_OUTPUT

      - name: Publish (Linux)
        run: dotnet publish src/UpscaylVideo/UpscaylVideo.csproj -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true -o publish/linux-x64

      - name: Zip binaries (Linux)
        run: |
          cd publish/linux-x64
          zip -r ../../UpscaylVideo-linux-x64-${{ steps.minver.outputs.version }}.zip .

      - name: Publish (Windows)
        run: dotnet publish src/UpscaylVideo/UpscaylVideo.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -o publish/win-x64

      - name: Zip binaries (Windows)
        run: |
          cd publish/win-x64
          zip -r ../../UpscaylVideo-win-x64-${{ steps.minver.outputs.version }}.zip .

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: UpscaylVideo-linux-x64-${{ steps.minver.outputs.version }}.zip
          path: UpscaylVideo-linux-x64-${{ steps.minver.outputs.version }}.zip

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: UpscaylVideo-win-x64-${{ steps.minver.outputs.version }}.zip
          path: UpscaylVideo-win-x64-${{ steps.minver.outputs.version }}.zip

  release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # Production release: only if triggered by a v*.*.* tag
      - name: Create Production Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build-and-publish.outputs.minver-version }}
          name: ${{ needs.build-and-publish.outputs.minver-version }}
          make_latest: true
          files: |
            artifacts/UpscaylVideo-linux-x64-${{ needs.build-and-publish.outputs.minver-version }}.zip/UpscaylVideo-linux-x64-${{ needs.build-and-publish.outputs.minver-version }}.zip
            artifacts/UpscaylVideo-win-x64-${{ needs.build-and-publish.outputs.minver-version }}.zip/UpscaylVideo-win-x64-${{ needs.build-and-publish.outputs.minver-version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      # Preview release: only if not a v*.*.* tag (e.g. workflow_dispatch)
      - name: Create Preview Release
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build-and-publish.outputs.minver-version }}
          name: ${{ needs.build-and-publish.outputs.minver-version }}
          prerelease: true
          make_latest: true
          files: |
            artifacts/UpscaylVideo-linux-x64-${{ needs.build-and-publish.outputs.minver-version }}.zip/UpscaylVideo-linux-x64-${{ needs.build-and-publish.outputs.minver-version }}.zip
            artifacts/UpscaylVideo-win-x64-${{ needs.build-and-publish.outputs.minver-version }}.zip/UpscaylVideo-win-x64-${{ needs.build-and-publish.outputs.minver-version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}




